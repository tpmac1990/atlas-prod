(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./src/components/detail/edit/EditTitleComponent.js":
/*!**********************************************************!*\
  !*** ./src/components/detail/edit/EditTitleComponent.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/esm/react-router-dom.js\");\n\n\n\nvar EditTitleComponent = function EditTitleComponent(props) {\n  var index = props.index,\n      title = props.title;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"edit-title\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h2\", null, title, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"edit mode\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[\"Link\"], {\n    className: \"link-c2\",\n    to: \"../\".concat(index)\n  }, \"detail\")));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (EditTitleComponent);\n\n//# sourceURL=webpack:///./src/components/detail/edit/EditTitleComponent.js?");

/***/ }),

/***/ "./src/components/detail/edit/buildEditDictionary.js":
/*!***********************************************************!*\
  !*** ./src/components/detail/edit/buildEditDictionary.js ***!
  \***********************************************************/
/*! exports provided: buildEditDictionary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildEditDictionary\", function() { return buildEditDictionary; });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar formatValue = function formatValue(value, format) {\n  switch (format) {\n    case 'integer':\n      return parseInt(value);\n\n    case 'float':\n      return parseFloat(value);\n\n    case 'string':\n      return value.toString();\n  }\n};\n\nvar buildMultiColumnDict = function buildMultiColumnDict(multi, obj_id, id, field) {\n  var dict = {}; // console.log(field)\n  // console.log(multi)\n\n  multi.forEach(function (line) {\n    // console.log(line)\n    // if ( line.value === 'obj_id' ){\n    //     dict[line.name] = formatValue(obj_id, line.format)\n    if (line.value === '_id') {\n      dict[line.name] = formatValue(id, line.format);\n    } else if (line.value === 'in_multi') {\n      dict[line.name] = formatValue(field[line.name], line.format);\n    }\n  }); // console.log(dict)\n\n  return dict;\n}; // formats the form data ready for the post api call\n\n\nvar buildEditDictionary = function buildEditDictionary(data_dict, orig_data, columns, obj_id) {\n  // const columns = createFields()\n  // console.log()\n  var dict = {\n    set: {},\n    create: {},\n    add: {},\n    remove: {},\n    multi: {},\n    omulti: {}\n  };\n  var changes_made = false; // if there are no changes then no need to call the api\n\n  Object.keys(data_dict).forEach(function (sk) {\n    var _columns$sk = columns[sk],\n        multi = _columns$sk.multi,\n        is_int = _columns$sk.is_int,\n        is_array = _columns$sk.is_array,\n        col_field = _columns$sk.field;\n    var field = data_dict[sk];\n    var create_lst = [];\n    var multi_lst = [];\n    var add_lst = [];\n    var remove_lst = [];\n    var set_lst = [];\n    Object.keys(field).forEach(function (fk) {\n      // console.log(field[fk])\n      var _field$fk = field[fk],\n          id = _field$fk.id,\n          label = _field$fk.label,\n          current = _field$fk.current,\n          remove = _field$fk.remove,\n          add = _field$fk.add; // if 'id' contains a '#' then the label needs to be added to its appropriate model first to get an ID to relate to.\n\n      var is_create = id.toString().includes('#'); // parse integer style PK's to integer form\n\n      var id = is_int && !is_create ? parseInt(id) : id; // if value already exists and is not being removed\n\n      if (!remove && current) {\n        // if there are no extra fields like a through model would have\n        if (!multi) {\n          // if field is a m2m field then it needs to be in an array, otherwise just a single value\n          if (is_array) {\n            set_lst.push(id);\n          } else {\n            set_lst = id;\n          }\n        } else {\n          // the listed_simple group requires the exchange id and the ticker id to be passed\n          if (['listed_simple'].includes(sk)) {\n            if (add) {\n              create_lst.push(_defineProperty({\n                exchange_id: field[fk].exchange_id\n              }, col_field, label));\n              remove_lst.push(id); // adding to the remove list will record it in the Change table as 'remove'\n\n              changes_made = true;\n            } else {\n              set_lst.push(id);\n            }\n          } else {\n            // if the value is current but has an update in one of the multiple columns then this will be triggered.\n            // the api will first look to see if the value exists and then update or add it accordingly\n            multi_lst.push(buildMultiColumnDict(multi, obj_id, id, field[fk]));\n            set_lst.push(id); // if add is true then a change has been made to a column\n\n            if (add) {\n              add_lst.push(id);\n              changes_made = true;\n            }\n          }\n        } // if value is to be added and not to be removed\n\n      } else if (!remove && add) {\n        if (['listed_simple'].includes(sk)) {\n          create_lst.push(_defineProperty({\n            exchange_id: field[fk].exchange_id\n          }, col_field, label));\n        } else {\n          if (!multi) {\n            // if needs to be created\n            if (is_create) {\n              create_lst.push(_defineProperty({}, col_field, label));\n            } else {\n              add_lst.push(id);\n\n              if (is_array) {\n                set_lst.push(id);\n              } else {\n                set_lst = id;\n              }\n            }\n          } else {\n            if (is_create) {\n              create_lst.push(_defineProperty({\n                exchange: field[fk].exchange\n              }, col_field, label)); // needs to made dynamic\n              // multi_lst.push(buildMultiColumnDict(multi,obj_id,id,field[fk]))\n            } else {\n              // if the value is current but has an update in one of the multiple columns then this will be triggered.\n              // the api will first look to see if the value exists and then update or add it accordingly\n              multi_lst.push(buildMultiColumnDict(multi, obj_id, id, field[fk]));\n              set_lst.push(id);\n              add_lst.push(id);\n            }\n          }\n        }\n\n        changes_made = true;\n      } else if (current && remove) {\n        remove_lst.push(id);\n        changes_made = true;\n      }\n    }); // set: values to set to database\n    // create: values newly created and need to be added before its set value can be set\n    // add: values to be added\n    // remove: values to be removed\n\n    dict.set[sk] = set_lst;\n    dict.multi[sk] = multi_lst;\n    dict.create[sk] = create_lst;\n    dict.add[sk] = add_lst;\n    dict.remove[sk] = remove_lst;\n  });\n  dict['changes'] = changes_made; // this builds the initial multi object before any changes. This is used in the backend to determine which changes have occurred which are then recorded in the\n  // relevant change table. Without this step, it is only possible to determine that a change was made to a holder and if that was a percentage/holder/name or what the \n  // percentage was changed from.\n  // multi_dic: key value from the data_dic and orig_data 'holder'. Then the name to present in the final dict 'name' and its equivalent field in the orig_data dic '_id'\n  // 'listed_simple' is not included as it is handled another way. Excluding it from multi_dic will return an empty array.\n\n  var multi_dic = {\n    holder: {\n      'name': '_id',\n      'percown': 'percown'\n    },\n    parent_company: {\n      'name': '_id',\n      'percown': 'percown'\n    },\n    subsidiaries: {\n      'name': '_id',\n      'percown': 'percown'\n    }\n  };\n  Object.keys(data_dict).forEach(function (sk) {\n    var multi = columns[sk].multi; // Only continue if it has multi columns  \n\n    if (multi) {\n      var omulti_lst = []; // get the array of objects from the original data\n\n      var field = orig_data[sk]; // loop through each object in the group and build the dictionary\n\n      field.forEach(function (fk) {\n        var temp = {}; // if sk is not in the 'multi_dic' then it will be given an empty array\n\n        if (sk in multi_dic) {\n          // build the object by looping over each key for the sk object in the multi_dic\n          Object.keys(multi_dic[sk]).forEach(function (x) {\n            temp[x] = fk[multi_dic[sk][x]];\n          });\n          omulti_lst.push(temp);\n        }\n      });\n      if (sk in multi_dic) dict.omulti[sk] = omulti_lst;\n    }\n  });\n  return dict;\n};\n\n//# sourceURL=webpack:///./src/components/detail/edit/buildEditDictionary.js?");

/***/ }),

/***/ "./src/components/detail/edit/editConfigs.js":
/*!***************************************************!*\
  !*** ./src/components/detail/edit/editConfigs.js ***!
  \***************************************************/
/*! exports provided: site_objs, holder_objs, title_objs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"site_objs\", function() { return site_objs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"holder_objs\", function() { return holder_objs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"title_objs\", function() { return title_objs; });\n// configs for the infinity select box in the respective groups\n// name: the key for which all state is stored within for the dropdown in redux\n// endpoint: the api endpoint to fetch the data for the dropdown from\n// model: the model to get the data to populate the select box with\n// key: the key of the value to display. this is the pk in the database and is used to update the database\n// label: the values displayed in the dropdown\n// unique_grp: name of the multi group for which all values need to be unique. Used when unique values required across multiple groups\n// styles: the style to apply to the dropdown\n// configs to manage the multicolumn tables and how or if they are editable\n// style: the bootstrap column width. they should equal to 10 with 2 left for the final 'remove' action column.\n// header: the column header as multiple column tables have column headers\n// edit_type: the type of edit. null = not editable, input = manual input, select = select from dropdown (requires other configs)\n// input_type: for 'edit_type' input. this is the type of input to display such as 'text' or 'Number'\n// model: for 'edit_type' select: the model to get the dropdown data from\n// select_key: for 'edit_type' select: the field of the model to use as the keys in the dropdown\n// select_label: for 'edit_type' select: the field of the model to display in the dropdown\n// default: for 'edit_type' select: the default value to display when a new entry is added.\n// columns is used to format the data to be sent in the post request\n// field: required when using 'ItemsManyManualAdd'. this is the model field name to be updated\n// is_int: if the key is an integer it will use pareseInt to convert it to integer form from string\n// is_array: if the field is an m2m then the result needs to be in array form, otherwise it should'nt\n// multi: required for tables with multiple columns. it takes a list of the columns accept for the title id column. this is sorted in the backend\n//  name: name of field. It should be the same as the field in the model\n// format: the format of the value to be sent to the backend\n// value: used to identify how to format the value in buildEditDictionary.\nvar site_objs = {\n  groups: {\n    geoProvinceSelect: {\n      name: 'geoprovince',\n      endpoint: 'site-group',\n      model: 'GeologicalProvince',\n      key: '_id',\n      label: 'name',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    occTypeSelect: {\n      name: 'typ',\n      endpoint: 'site-group',\n      model: 'occType',\n      key: '_id',\n      label: 'original',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    majorMaterialSelect: {\n      name: 'majmat',\n      endpoint: 'site-group',\n      model: 'Material',\n      key: '_id',\n      label: 'name',\n      unique_grp: 'material',\n      styles: 'infinite-select-c1'\n    },\n    minorMaterialSelect: {\n      name: 'minmat',\n      endpoint: 'site-group',\n      model: 'Material',\n      key: '_id',\n      label: 'name',\n      unique_grp: 'material',\n      styles: 'infinite-select-c1'\n    },\n    statusSelect: {\n      name: 'status',\n      endpoint: 'site-group',\n      model: 'OccStatus',\n      key: '_id',\n      label: 'original',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    sizeSelect: {\n      name: 'size',\n      endpoint: 'site-group',\n      model: 'OccSize',\n      key: '_id',\n      label: 'name',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    nameSelect: {\n      name: 'name',\n      endpoint: 'site-group',\n      model: 'OccName',\n      key: '_id',\n      label: 'name',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    oidSelect: {\n      name: 'oid',\n      endpoint: 'site-group',\n      model: 'OccOriginalID',\n      key: '_id',\n      label: '_id',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    }\n  },\n  columns: {\n    name: {\n      field: 'name',\n      is_int: true,\n      is_array: true\n    },\n    oid: {\n      field: '_id',\n      is_int: false,\n      is_array: true\n    },\n    typ: {\n      is_int: true,\n      is_array: true\n    },\n    status: {\n      is_int: true,\n      is_array: false\n    },\n    geoprovince: {\n      is_int: true,\n      is_array: true\n    },\n    majmat: {\n      is_int: false,\n      is_array: true\n    },\n    minmat: {\n      is_int: false,\n      is_array: true\n    },\n    size: {\n      is_int: false,\n      is_array: false\n    },\n    govregion: {\n      is_int: true,\n      is_array: false\n    },\n    localgov: {\n      is_int: true,\n      is_array: false\n    },\n    state: {\n      is_int: false,\n      is_array: false\n    }\n  },\n  multis: {}\n};\nvar holder_objs = {\n  groups: {\n    parentSelect: {\n      name: 'parent_company',\n      endpoint: 'site-group',\n      model: 'Holder',\n      key: '_id',\n      label: 'name',\n      unique_grp: 'holder',\n      styles: 'infinite-select-c1'\n    },\n    subsidiarySelect: {\n      name: 'subsidiaries',\n      endpoint: 'site-group',\n      model: 'Holder',\n      key: '_id',\n      label: 'name',\n      unique_grp: 'holder',\n      styles: 'infinite-select-c1'\n    },\n    listedSelect: {\n      name: 'listed_simple',\n      endpoint: 'site-group',\n      model: 'Listed',\n      key: '_id',\n      label: 'ticker',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    }\n  },\n  columns: {\n    parent_company: {\n      is_int: true,\n      is_array: true,\n      multi: [{\n        name: 'name',\n        format: 'integer',\n        value: '_id'\n      }, {\n        name: 'percown',\n        format: 'float',\n        value: 'in_multi'\n      }]\n    },\n    subsidiaries: {\n      is_int: true,\n      is_array: true,\n      multi: [{\n        name: 'name',\n        format: 'integer',\n        value: '_id'\n      }, {\n        name: 'percown',\n        format: 'float',\n        value: 'in_multi'\n      }]\n    },\n    listed_simple: {\n      field: 'ticker',\n      is_int: true,\n      is_array: true,\n      multi: [{\n        name: 'ticker',\n        format: 'string',\n        value: '_id'\n      }, {\n        name: 'exchange_id',\n        format: 'string',\n        value: 'in_multi'\n      }]\n    }\n  },\n  multis: {\n    relatedMulti: [{\n      header: 'Name',\n      label: 'label',\n      // the core field is always labelled 'label'\n      edit_type: null,\n      lg_style: 'col-7',\n      sm_style: 'col-7'\n    }, {\n      header: '% Held',\n      label: 'percown',\n      edit_type: 'input',\n      input_type: 'Number',\n      \"default\": 0,\n      lg_style: 'col-3',\n      sm_style: 'col-3'\n    }],\n    listedMulti: [{\n      header: 'Ticker',\n      label: 'label',\n      edit_type: null,\n      lg_style: 'col-3',\n      sm_style: 'col-3'\n    }, {\n      header: 'Exchange',\n      label: 'exchange_id',\n      edit_type: 'select',\n      \"default\": 'ASX',\n      model: 'Exchange',\n      select_key: '_id',\n      select_label: 'name',\n      lg_style: 'col-7',\n      sm_style: 'col-7'\n    }]\n  }\n};\nvar title_objs = {\n  groups: {\n    geoProvinceSelect: {\n      name: 'geoprovince',\n      endpoint: 'site-group',\n      model: 'GeologicalProvince',\n      key: '_id',\n      label: 'name',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    typeSelect: {\n      name: 'typ',\n      endpoint: 'site-group',\n      model: 'TenType',\n      key: '_id',\n      label: 'original',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    statusSelect: {\n      name: 'status',\n      endpoint: 'site-group',\n      model: 'TenStatus',\n      key: '_id',\n      label: 'original',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    oidSelect: {\n      name: 'oid',\n      endpoint: 'site-group',\n      model: 'TenOriginalID',\n      key: '_id',\n      label: '_id',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    },\n    holderSelect: {\n      name: 'holder',\n      endpoint: 'site-group',\n      model: 'Holder',\n      key: '_id',\n      label: 'name',\n      unique_grp: null,\n      styles: 'infinite-select-c1'\n    }\n  },\n  columns: {\n    holder: {\n      is_int: true,\n      is_array: true,\n      multi: [{\n        name: 'name',\n        format: 'integer',\n        value: '_id'\n      }, {\n        name: 'percown',\n        format: 'float',\n        value: 'in_multi'\n      }]\n    },\n    oid: {\n      field: '_id',\n      is_int: false,\n      is_array: true\n    },\n    typ: {\n      is_int: true,\n      is_array: false\n    },\n    status: {\n      is_int: true,\n      is_array: false\n    },\n    geoprovince: {\n      is_int: true,\n      is_array: true\n    }\n  },\n  multis: {\n    holderMulti: [{\n      header: 'Name',\n      label: 'label',\n      // the core field is always labelled 'label'\n      edit_type: null,\n      lg_style: 'col-6',\n      sm_style: 'col-7'\n    }, {\n      header: '% Held',\n      label: 'percown',\n      edit_type: 'input',\n      input_type: 'Number',\n      // formates the input to accept numbers only\n      \"default\": 0,\n      lg_style: 'col-3',\n      sm_style: 'col-3'\n    }]\n  }\n};\n\n//# sourceURL=webpack:///./src/components/detail/edit/editConfigs.js?");

/***/ }),

/***/ "./src/components/reusable/infinityInput/ClientSideInfinityInput.js":
/*!**************************************************************************!*\
  !*** ./src/components/reusable/infinityInput/ClientSideInfinityInput.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../redux */ \"./src/redux/index.js\");\n/* harmony import */ var _InfinityInputArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./InfinityInputArea */ \"./src/components/reusable/infinityInput/InfinityInputArea.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nvar ClientSideInfinityInput = function ClientSideInfinityInput(props) {\n  var dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useDispatch\"])();\n  var name = props.name; // console.log(name)\n\n  var _useSelector = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useSelector\"])(function (state) {\n    return state.dropdown[name];\n  }),\n      model = _useSelector.model,\n      key = _useSelector.key,\n      label = _useSelector.label,\n      search = _useSelector.search,\n      data = _useSelector.data,\n      limit = _useSelector.limit,\n      redux_loading = _useSelector.loading,\n      clientmax = _useSelector.clientmax,\n      endpoint = _useSelector.endpoint;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(data.length > limit),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasMore = _useState2[0],\n      setHasMore = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      offset = _useState6[0],\n      setOffset = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(data),\n      _useState8 = _slicedToArray(_useState7, 2),\n      options = _useState8[0],\n      setOptions = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      slicedOptions = _useState10[0],\n      setSlicedOptions = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isReset = _useState12[0],\n      setIsReset = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      firstRender = _useState14[0],\n      setFirstRender = _useState14[1]; // when loading is set to true the action is dispatched to get data\n\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    if (redux_loading) {\n      dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"getInfinityDropdownData\"])({\n        name: name,\n        model: model,\n        key: key,\n        label: label,\n        search: search,\n        offset: offset,\n        limit: limit,\n        clientmax: clientmax\n      }, endpoint));\n    }\n  }, [redux_loading]);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    setLoading(true);\n  }, [data]); // When search changes reset the offset rerender the options\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    if (!firstRender) {\n      var timer = setTimeout(function () {\n        setOffset(0);\n        setIsReset(true);\n        setLoading(true);\n      }, 500);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [search]); // Append more rows if they exist when the user scrolls to the bottom of the element\n\n  var scrollHandler = function scrollHandler(e) {\n    if (hasMore && !loading) {\n      var _e$currentTarget = e.currentTarget,\n          scrollTop = _e$currentTarget.scrollTop,\n          clientHeight = _e$currentTarget.clientHeight,\n          scrollHeight = _e$currentTarget.scrollHeight;\n\n      if (scrollHeight - scrollTop === clientHeight) {\n        setIsReset(false);\n        setLoading(true);\n      }\n    }\n  }; // set the slice options to render in the dropdown. If its a reset from a search change then reset the options aswell\n\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    if (loading) {\n      if (isReset) {\n        setOptions(data.filter(function (item) {\n          return item[1].toLowerCase().includes(search.toLowerCase());\n        }));\n        setHasMore(options.length > offset + limit);\n      } else {\n        setHasMore(options.length > offset + limit);\n        setSlicedOptions(function (prevSlicedOptions) {\n          return [].concat(_toConsumableArray(prevSlicedOptions), _toConsumableArray(options.slice(offset, offset + limit)));\n        });\n        setOffset(function (prevOffset) {\n          return prevOffset + limit;\n        });\n        setLoading(false);\n      }\n    }\n  }, [loading]); // if the options change because of a reset then rerender the sliced options.\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    if (isReset) {\n      setSlicedOptions(options.slice(offset, offset + limit));\n      setOffset(offset + limit);\n      setLoading(false);\n    }\n  }, [options]);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    setFirstRender(false);\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_InfinityInputArea__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    scrollHandler: scrollHandler,\n    options: slicedOptions,\n    name: name\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ClientSideInfinityInput);\n\n//# sourceURL=webpack:///./src/components/reusable/infinityInput/ClientSideInfinityInput.js?");

/***/ }),

/***/ "./src/components/reusable/infinityInput/InfinityInput.js":
/*!****************************************************************!*\
  !*** ./src/components/reusable/infinityInput/InfinityInput.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../redux */ \"./src/redux/index.js\");\n/* harmony import */ var _SuccessInfinityInput__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SuccessInfinityInput */ \"./src/components/reusable/infinityInput/SuccessInfinityInput.js\");\n\n\n\n\n\nvar ThroughInfinityInput = function ThroughInfinityInput(props) {\n  var name = props.name;\n  var groupState = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useSelector\"])(function (state) {\n    return state.dropdown[name];\n  });\n  return groupState === undefined ? null : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SuccessInfinityInput__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    name: name\n  });\n};\n\nvar InfinityInput = function InfinityInput(props) {\n  var dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useDispatch\"])();\n  var _props$dict = props.dict,\n      name = _props$dict.name,\n      styles = _props$dict.styles,\n      model = _props$dict.model,\n      key = _props$dict.key,\n      label = _props$dict.label,\n      endpoint = _props$dict.endpoint;\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setState\"])({\n      name: name,\n      styles: styles,\n      model: model,\n      key: key,\n      label: label,\n      endpoint: endpoint\n    }));\n  }, [name]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ThroughInfinityInput, {\n    name: name\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InfinityInput);\n\n//# sourceURL=webpack:///./src/components/reusable/infinityInput/InfinityInput.js?");

/***/ }),

/***/ "./src/components/reusable/infinityInput/InfinityInputArea.js":
/*!********************************************************************!*\
  !*** ./src/components/reusable/infinityInput/InfinityInputArea.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../redux */ \"./src/redux/index.js\");\n\n\n\n\nvar InfinityInputArea = function InfinityInputArea(props) {\n  var dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useDispatch\"])();\n  var scrollHandler = props.scrollHandler,\n      options = props.options,\n      name = props.name; // groups such as maj and min materials that can only have unique values between them. This holds that data\n\n  var _useSelector = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useSelector\"])(function (state) {\n    return state.dropdown.unique_multi_groups;\n  }),\n      names = _useSelector.names,\n      values = _useSelector.values;\n\n  var clickHandler = function clickHandler(e) {\n    var _e$target = e.target,\n        id = _e$target.id,\n        innerHTML = _e$target.innerHTML; // if name in names then the group i.e. majmat is part of a multi group which must have unique values across all members\n\n    if (name in names) {\n      if (values[names[name]].includes(innerHTML)) {\n        // the value the user is attempting to add exists already across one of the unique multi groups. This will hide the dropdown, clear the\n        //      search and set an error in the dropdown state. This error is trigger a use effect in the appropriate parent components which will \n        //      hide the infinity-select box\n        dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setUniqueMultiGroupError\"])({\n          name: name,\n          value: innerHTML\n        }));\n      } else {\n        // the value selected doesn't exist, so it needs to be added to the multi group so it is not added a again in any of the other members of the multi group\n        dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"addUniqueGroupValues\"])({\n          group: names[name],\n          values: [innerHTML]\n        }));\n        dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setSelection\"])({\n          selection: {\n            key: id,\n            label: innerHTML\n          },\n          name: name\n        }));\n      }\n    } else {\n      // this group is not part of a multi group so only needs to be added to the selection\n      dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setSelection\"])({\n        selection: {\n          key: id,\n          label: innerHTML\n        },\n        name: name\n      }));\n    }\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"infinity-select-dropdown\",\n    onScroll: scrollHandler\n  }, options.map(function (row) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", {\n      key: row[0],\n      id: row[0],\n      onClick: clickHandler\n    }, row[1]);\n  }));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InfinityInputArea);\n\n//# sourceURL=webpack:///./src/components/reusable/infinityInput/InfinityInputArea.js?");

/***/ }),

/***/ "./src/components/reusable/infinityInput/ServerSideInfinityInput.js":
/*!**************************************************************************!*\
  !*** ./src/components/reusable/infinityInput/ServerSideInfinityInput.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../redux */ \"./src/redux/index.js\");\n/* harmony import */ var _InfinityInputArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./InfinityInputArea */ \"./src/components/reusable/infinityInput/InfinityInputArea.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nvar ServerSideInfinityInput = function ServerSideInfinityInput(props) {\n  var dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useDispatch\"])();\n  var name = props.name;\n\n  var _useSelector = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useSelector\"])(function (state) {\n    return state.dropdown[name];\n  }),\n      model = _useSelector.model,\n      key = _useSelector.key,\n      label = _useSelector.label,\n      search = _useSelector.search,\n      data = _useSelector.data,\n      limit = _useSelector.limit,\n      offset = _useSelector.offset,\n      hasMore = _useSelector.hasMore,\n      loading = _useSelector.loading,\n      clientmax = _useSelector.clientmax,\n      endpoint = _useSelector.endpoint;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstRender = _useState2[0],\n      setFirstRender = _useState2[1]; // resets the data and loads new data when a change is made in the search\n\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    if (!firstRender) {\n      var timer = setTimeout(function () {\n        dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"resetOffset\"])(name));\n        dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setLoading\"])(name));\n      }, 500);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [search]); // when loading is set to true the action is dispatched to get data\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    if (loading) {\n      dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"getInfinityDropdownData\"])({\n        name: name,\n        model: model,\n        key: key,\n        label: label,\n        search: search,\n        offset: offset,\n        limit: limit,\n        clientmax: clientmax\n      }, endpoint));\n    }\n  }, [loading]); // if user has scrolled to the bottom of the div and there is more data to fetch it will fetch more data\n\n  var scrollHandler = function scrollHandler(e) {\n    if (hasMore) {\n      var _e$currentTarget = e.currentTarget,\n          scrollTop = _e$currentTarget.scrollTop,\n          clientHeight = _e$currentTarget.clientHeight,\n          scrollHeight = _e$currentTarget.scrollHeight;\n\n      if (scrollHeight - scrollTop === clientHeight) {\n        dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setLoading\"])(name));\n      }\n    }\n  };\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    setFirstRender(false);\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_InfinityInputArea__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    name: name,\n    scrollHandler: scrollHandler,\n    options: data\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ServerSideInfinityInput);\n\n//# sourceURL=webpack:///./src/components/reusable/infinityInput/ServerSideInfinityInput.js?");

/***/ }),

/***/ "./src/components/reusable/infinityInput/SuccessInfinityInput.js":
/*!***********************************************************************!*\
  !*** ./src/components/reusable/infinityInput/SuccessInfinityInput.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../redux */ \"./src/redux/index.js\");\n/* harmony import */ var _ClientSideInfinityInput__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ClientSideInfinityInput */ \"./src/components/reusable/infinityInput/ClientSideInfinityInput.js\");\n/* harmony import */ var _ServerSideInfinityInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ServerSideInfinityInput */ \"./src/components/reusable/infinityInput/ServerSideInfinityInput.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\nvar SuccessInfinityInput = function SuccessInfinityInput(props) {\n  var name = props.name;\n  var dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useDispatch\"])();\n  var ref = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null); // const inputRef = useRef(null);\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstRender = _useState2[0],\n      setFirstRender = _useState2[1]; // const [ inputStyle, setInputStyle ] = useState('grey')\n\n\n  var _useSelector = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"useSelector\"])(function (state) {\n    return state.dropdown[name];\n  }),\n      selected = _useSelector.selected,\n      styles = _useSelector.styles,\n      data = _useSelector.data,\n      search = _useSelector.search,\n      is_client_dropdown = _useSelector.is_client_dropdown,\n      visible = _useSelector.visible,\n      created_id = _useSelector.created_id; // ??? see SuccessInfinitySelect for docs on this component\n\n\n  var initialSearch = function initialSearch() {\n    if (firstRender) {\n      dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setLoading\"])(name));\n      setFirstRender(false);\n    } // inputRef.current.focus()\n\n  }; // make dropdown visible when the user clicks in the input box\n\n\n  var ClickHandler = function ClickHandler(e) {\n    e.target.tagName !== 'BUTTON' && !visible && dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setDropdownVisibility\"])({\n      name: name,\n      visible: true\n    }));\n  };\n\n  var handleClickOutside = function handleClickOutside(event) {\n    ref.current && !ref.current.contains(event.target) && dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"hideAllDropdowns\"])());\n  };\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    document.addEventListener('click', handleClickOutside, true);\n    return function () {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  }); // each time the component is created the created id will have a 1 added to it to make it unique\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"incrementCreatedId\"])({\n      name: name\n    }));\n  }, []); // set the name and an empty search value for the input box\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    !visible && dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setSearch\"])({\n      value: '',\n      name: name\n    }));\n  }, [visible]);\n\n  var AddHandler = function AddHandler(e) {\n    e.preventDefault();\n\n    if (search === '') {\n      dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setPopupMessage\"])({\n        message: \"Cannot add a blank value\",\n        type: 'warning',\n        style: 'warning-fixed-user'\n      }));\n    } else {\n      var i;\n      var success = false;\n\n      for (i = 0; i < data.length; i++) {\n        if (data[i][1].toLowerCase() === search.toLowerCase()) {\n          dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setSelection\"])({\n            selection: {\n              key: data[i][0],\n              label: data[i][1]\n            },\n            name: name\n          }));\n          success = true;\n          break;\n        }\n      }\n\n      !success && dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setSelection\"])({\n        selection: {\n          key: created_id,\n          label: search\n        },\n        name: name\n      }));\n      dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setDropdownVisibility\"])({\n        name: name,\n        visible: false\n      }));\n    }\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    ref: ref,\n    className: \"\".concat(styles, \" infinity-with-add\"),\n    onClick: ClickHandler\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"infinity-select-input \".concat(visible ? 'blue' : 'grey'),\n    onClick: initialSearch\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    type: \"text\",\n    autoComplete: \"off\",\n    value: search,\n    placeholder: selected.label,\n    onChange: function onChange(e) {\n      return dispatch(Object(_redux__WEBPACK_IMPORTED_MODULE_2__[\"setSearch\"])({\n        value: e.target.value,\n        name: name\n      }));\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"infinity-down-arrow\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"material-icons\"\n  }, \"keyboard_arrow_down\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    className: \"btn-c5\",\n    onClick: AddHandler\n  }, \"Add\"), visible && (is_client_dropdown ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ClientSideInfinityInput__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    name: name\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ServerSideInfinityInput__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    name: name\n  })));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SuccessInfinityInput);\n\n//# sourceURL=webpack:///./src/components/reusable/infinityInput/SuccessInfinityInput.js?");

/***/ })

}]);